generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  name            String
  email           String           @unique
  role            Role
  password        String
  managedProjects Project[]
  projects        Projects_Users[]
  createdTickets  Ticket[]         @relation("CreatedBy")
  assignedTickets Ticket[]         @relation("AssignedTo")
  editedTickets   Ticket[]         @relation("EditedBy")
}

enum Role {
  TESTER
  DEVELOPER
  MANAGER
  ADMIN
}

model Project {
  id              Int              @id @default(autoincrement())
  title           String
  description     String
  managedByUser   User             @relation(fields: [managedByUserId], references: [id], onDelete: Cascade)
  managedByUserId Int
  members         Projects_Users[]
  tickets         Ticket[]
}

model Projects_Users {
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  @@id([projectId, userId])
}

model Ticket {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  priority    Priority
  createdOn   DateTime

  createdBy       User @relation("CreatedBy", fields: [createdByUserId], references: [id], onDelete: Cascade)
  createdByUserId Int

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int

  assignedTo       User @relation("AssignedTo", fields: [assignedToUserId], references: [id], onDelete: Cascade)
  assignedToUserId Int

  status         Status
  lastModifiedOn DateTime?

  editedBy       User @relation("EditedBy", fields: [editedByUserId], references: [id], onDelete: Cascade)
  editedByUserId Int
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  CREATED
  IN_PROGRESS
  SOLVED
}
