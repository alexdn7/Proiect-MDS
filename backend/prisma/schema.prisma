generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  role         Role
  registeredOn DateTime @default(now())
  password     String

  managedProjects Project[]
  projects        Projects_Users[]
  createdTickets  Ticket[]         @relation("CreatedBy")
  assignedTickets Ticket[]         @relation("AssignedTo")
  editedTickets   Ticket[]         @relation("EditedBy")
}

enum Role {
  TESTER
  DEVELOPER
  MANAGER
  ADMIN
}

model Project {
  id          String   @id @default(uuid())
  title       String @db.VarChar(250)
  description String @db.VarChar(500)

  managedByUser   User   @relation(fields: [managedByUserId], references: [id], onDelete: Cascade)
  managedByUserId String

  members Projects_Users[]
  tickets Ticket[]
}

model Projects_Users {
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@id([projectId, userId])
}

model Ticket {
  id          String   @id @default(uuid())
  title       String   @db.VarChar(300)
  description String   @db.VarChar(1000)
  priority    Priority

  image_path String?
  createdOn  DateTime

  createdBy       User   @relation("CreatedBy", fields: [createdByUserId], references: [id], onDelete: Cascade)
  createdByUserId String

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String

  assignedTo       User   @relation("AssignedTo", fields: [assignedToUserId], references: [id], onDelete: Cascade)
  assignedToUserId String

  status         Status
  lastModifiedOn DateTime?

  editedBy       User?   @relation("EditedBy", fields: [editedByUserId], references: [id], onDelete: Cascade)
  editedByUserId String?
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  CREATED
  IN_PROGRESS
  SOLVED
}
